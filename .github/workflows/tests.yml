name: Tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10"]
    # env:
    #   OS: ${{ matrix.os }}
    #   PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

          pip install flake8==4.0.1 pycodestyle==2.8.0 pytest==7.1.2
          # pip install flake8 pycodestyle
          # # Flake8 Bugs finder
          # pip install flake8-encodings flake8-requirements flake8-secure-coding-standard flake8-warnings
          # # Flake8 Clean Code
          # pip install flake8-class-attributes-order flake8-commas flake8-comprehensions flake8-datetime-utcnow-plugin flake8-implicit-str-concat flake8-obey-import-goat flake8-return flake8-sql flake8-too-many
          # # Flake8 Naming
          # pip install flake8-builtins flake8-functions-names flake8-test-name flake8-variables-names pep8-naming
          # # Flake8 Complexity
          # pip install flake8-annotations-complexity flake8-cognitive-complexity flake8-expression-complexity flake8-functions flake8-length
          # # Flake8 Imports
          # pip install flake8-absolute-import flake8-import-style flake8-tidy-imports
          # # Flake8 Library-specific checks
          # pip install flake8-django flake8-django-migrations
          # # Flake 8 Wrappers
          # pip install flake8-bandit flake8-black flake8-isort flake8-pylint
          # # Flake8 Formatters
          # pip install flake8-gl-codeclimate

          # # pylama
          # pip install pylama[all]

          # radon
          pip install radon

          # bandit
          pip install bandit

          pip install -r requirements.txt
      - name: Copy env
        run: |
          sudo cp .env.examplefordjangolocal src/
          cd src
          sudo mv .env.examplefordjangolocal .env
      - name: Lint with flake8
        run: |
          cd src
          flake8 --bug-report
          flake8 . --exclude=*/migrations/*
          # stop the build if there are Python syntax errors or undefined names
          python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length=127 --exclude=*/migrations/*
          # # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python3 -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=*/migrations/*
      # - name: Test with pylama
      #   run: |
      #     cd src
      #     pylama
      - name: Test with radon
        run: |
          cd src
          radon cc .
      - name: Test with bandit
        run: |
          cd src
          bandit .
      # - name: Test with pytest
      #   run: |
      #     cd src
      #     pytest
